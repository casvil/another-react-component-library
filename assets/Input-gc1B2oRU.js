import{j as i}from"./jsx-runtime-D_zvdyIk.js";import{r as w,R as N}from"./iframe-yv47tbq0.js";import{c as r}from"./clsx-B-dksMZM.js";import{i as b}from"./size-7yIMnH0j.js";const m=w.forwardRef(({icon:t,iconPosition:s="left",size:o="md",className:u,inputClassName:d,disabled:e,readOnly:l,...f},g)=>{const a=!!t,y=r("relative flex items-center",e&&"opacity-60 cursor-not-allowed",u),n={sm:{icon:"text-sm",iconLeft:"left-2",iconRight:"right-2"},md:{icon:"text-base",iconLeft:"left-3",iconRight:"right-3"},lg:{icon:"text-lg",iconLeft:"left-4",iconRight:"right-4"}}[o],h=r("block rounded-md border shadow-sm w-full",b[o],a&&s==="left"&&"pl-10",a&&s==="right"&&"pr-10","focus:outline-none focus:ring-2 focus:ring-blue-500",e&&"bg-gray-100 cursor-not-allowed",l&&"bg-gray-50 text-gray-500",d),x=r("absolute inset-y-0 flex items-center",n.icon,s==="left"?n.iconLeft:n.iconRight,e&&"text-gray-400",!e&&"text-gray-500"),R=c=>{const p=c.props,v=c.type;return p["aria-label"]||p.role||v.displayName==="Spinner"};return i.jsxs("div",{className:y,children:[a&&i.jsx("span",{className:x,"aria-hidden":!(N.isValidElement(t)&&R(t)),children:t}),i.jsx("input",{ref:g,disabled:e,readOnly:l,className:h,...f})]})});m.displayName="Input";m.__docgenInfo={description:`Input atom component.
Renders a styled input with optional icon on left or right.
Support for disabled and read-only states.
Uses Tailwind CSS for styling and supports all native input attributes.`,methods:[],displayName:"Input",props:{icon:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},iconPosition:{required:!1,tsType:{name:"union",raw:"'left' | 'right'",elements:[{name:"literal",value:"'left'"},{name:"literal",value:"'right'"}]},description:"",defaultValue:{value:"'left'",computed:!1}},size:{required:!1,tsType:{name:"union",raw:"'sm' | 'md' | 'lg'",elements:[{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"}]},description:"",defaultValue:{value:"'md'",computed:!1}},inputClassName:{required:!1,tsType:{name:"string"},description:""},className:{required:!1,tsType:{name:"string"},description:""}},composes:["Omit"]};export{m as I};
