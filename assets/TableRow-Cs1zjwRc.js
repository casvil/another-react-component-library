import{j as o}from"./jsx-runtime-D_zvdyIk.js";import{e as u,r as m}from"./iframe-DoDsO8uN.js";import{c}from"./clsx-B-dksMZM.js";import{j as p,k as d}from"./classes-CnWFQedi.js";const f=u.memo(m.forwardRef(({children:t,size:l="md",align:a="left",variant:e="default",truncate:s=!1,className:r,...i},n)=>{const b=c(p.cell,d.cell.padding[l],d.cell.text[l],{"text-left":a==="left"&&e!=="action","text-center":a==="center"||e==="action","text-right":a==="right"&&e!=="action","font-mono tabular-nums":e==="numeric","truncate max-w-0":s},r);return o.jsx("td",{ref:n,className:b,...e==="numeric"&&{"data-type":"numeric"},...i,children:s?o.jsx("div",{className:"truncate",title:typeof t=="string"?t:void 0,children:t}):t})}));f.displayName="TableData";f.__docgenInfo={description:`TableData atom component. Renders a styled table data cell (td) with proper semantics.
Supports different sizes, text alignment, content variants (numeric, action), and text truncation.
Fully accessible with proper ARIA attributes and semantic td element.`,methods:[],displayName:"TableData",props:{children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},size:{required:!1,tsType:{name:"union",raw:"'sm' | 'md' | 'lg'",elements:[{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"}]},description:"",defaultValue:{value:"'md'",computed:!1}},align:{required:!1,tsType:{name:"union",raw:"'left' | 'center' | 'right'",elements:[{name:"literal",value:"'left'"},{name:"literal",value:"'center'"},{name:"literal",value:"'right'"}]},description:"",defaultValue:{value:"'left'",computed:!1}},variant:{required:!1,tsType:{name:"union",raw:"'default' | 'numeric' | 'action'",elements:[{name:"literal",value:"'default'"},{name:"literal",value:"'numeric'"},{name:"literal",value:"'action'"}]},description:"",defaultValue:{value:"'default'",computed:!1}},truncate:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},className:{required:!1,tsType:{name:"string"},description:""}}};const g=u.memo(m.forwardRef(({children:t,size:l="md",variant:a="default",interactive:e=!1,className:s,...r},i)=>{const n=c(p.row,d.row.height[l],{"bg-white":a==="default","bg-gray-50":a==="striped","bg-blue-50":a==="highlighted","hover:bg-gray-100 cursor-pointer transition-colors":e,"focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-inset":e},s);return o.jsx("tr",{ref:i,className:n,...e&&{tabIndex:0,role:"row"},...r,children:t})}));g.displayName="TableRow";g.__docgenInfo={description:`TableRow atom component. Renders a styled table row (tr) with proper semantics.
Supports different sizes, visual variants (striped, highlighted), and interactive behavior.
Fully accessible with proper ARIA attributes and semantic tr element.`,methods:[],displayName:"TableRow",props:{children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},size:{required:!1,tsType:{name:"union",raw:"'sm' | 'md' | 'lg'",elements:[{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"}]},description:"",defaultValue:{value:"'md'",computed:!1}},variant:{required:!1,tsType:{name:"union",raw:"'default' | 'striped' | 'highlighted'",elements:[{name:"literal",value:"'default'"},{name:"literal",value:"'striped'"},{name:"literal",value:"'highlighted'"}]},description:"",defaultValue:{value:"'default'",computed:!1}},interactive:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},className:{required:!1,tsType:{name:"string"},description:""}}};export{f as T,g as a};
