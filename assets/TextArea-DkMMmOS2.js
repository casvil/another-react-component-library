import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{r as f}from"./iframe-9e6QjIOn.js";import{c as r}from"./clsx-B-dksMZM.js";import{L as b}from"./Label-BnpzQARg.js";import{u as x}from"./useStableId-BjtyngGB.js";import{d as g}from"./classes-BD7lNhBs.js";const t=f.forwardRef(({label:a,labelPosition:i="above",wrapperClassName:l,labelClassName:o,size:n="md",id:m,className:d,...p},u)=>{const s=x(m),c=i==="beside"?"flex-row":"flex-col";return e.jsxs("div",{className:r("flex gap-2",c,l),children:[a&&e.jsx(b,{htmlFor:s,className:o,children:a}),e.jsx("textarea",{id:s,ref:u,className:r("resize-none rounded border border-gray-300 focus:outline-none focus:ring-2 focus:ring-indigo-500",g[n],d),...p})]})});t.displayName="TextArea";t.__docgenInfo={description:`TextArea atom component.
Renders a customizable <textarea> with optional label support, using Tailwind CSS styles.
It supports label positioning (above or beside), accessibility via \`aria-*\` attributes,
and custom styling through wrapper, label, and textarea class names.`,methods:[],displayName:"TextArea",props:{className:{required:!1,tsType:{name:"string"},description:""},label:{required:!1,tsType:{name:"string"},description:""},labelClassName:{required:!1,tsType:{name:"string"},description:""},labelPosition:{required:!1,tsType:{name:"union",raw:"'above' | 'beside'",elements:[{name:"literal",value:"'above'"},{name:"literal",value:"'beside'"}]},description:"",defaultValue:{value:"'above'",computed:!1}},wrapperClassName:{required:!1,tsType:{name:"string"},description:""},size:{required:!1,tsType:{name:"union",raw:"'sm' | 'md' | 'lg'",elements:[{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"}]},description:"",defaultValue:{value:"'md'",computed:!1}}},composes:["Omit"]};export{t as T};
